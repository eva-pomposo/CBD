// NMEC: 98513
 
// 1. Liste todos os documentos da coleção. 
db.restaurants.find() 

// 2. Apresente os campos restaurant_id, nome, localidade e gastronomia para todos os documentos da coleção
db.restaurants.find( {}, { "restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1 } )

// 3. Apresente os campos restaurant_id, nome, localidade e código postal (zipcode), mas exclua o campo _id de todos os documentos da coleção. 
db.restaurants.find( {}, { "_id": 0, "restaurant_id": 1, "nome": 1, "localidade": 1, "zipcode": 1 } )

// 4. Indique o total de restaurantes localizados no Bronx. 
db.restaurants.find( { "localidade": "Bronx" } ).count()

//5. Apresente os primeiros 15 restaurantes localizados no Bronx, ordenados por ordem crescente de nome
db.restaurants.find( { "localidade": "Bronx" } ).limit(15).sort( { nome:1 } )

//6. Liste todos os restaurantes que tenham pelo menos um score superior a 85.
db.restaurants.find( { "grades.score": { $gt: 85 } } )

//7. Encontre os restaurantes que obtiveram uma ou mais pontuações (score) entre [80 e 100].
db.restaurants.find({$and: [ { 'grades.score' : { $gte: 80 } }, { 'grades.score': { $lte: 100 } } ] } )

//8. Indique os restaurantes com latitude inferior a -95,7. 
db.restaurants.find( { 'address.coord.0': { $lt: -95.7 } } )

//9. Indique os restaurantes que não têm gastronomia "American", tiveram uma (ou mais) pontuação superior a 70 e estão numa latitude inferior a -65. 
 db.restaurants.find({$and: [ {"gastronomia": { $ne: "American" }}, {"grades.score" : {$gt: 70}}, {"address.coord.0": { $lt: -65} }  ]} )

//10. Liste o restaurant_id, o nome, a localidade e gastronomia dos restaurantes cujo nome começam por "Wil". 
db.restaurants.find({"nome": { $regex: "Will*"} }, { "restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1 } )

//11. Liste o nome, a localidade e a gastronomia dos restaurantes que pertencem ao Bronx e cuja gastronomia é do tipo "American" ou "Chinese". 
db.restaurants.find({$and: [{"localidade": "Bronx" }, {$or: [{gastronomia:"American"}, {gastronomia:"Chinese"}]} ]}, { "nome": 1, "localidade": 1, "gastronomia": 1 } )

//12. Liste o restaurant_id, o nome, a localidade e a gastronomia dos restaurantes localizados em "Staten Island", "Queens",  ou "Brooklyn". 
db.restaurants.find({$or: [{localidade:"Staten Island"}, {localidade:"Queens"}, {localidade:"Brooklyn"}]}, {"restaurant_id": 1, "nome": 1, "localidade": 1, "gastronomia": 1 } )

//13. Liste o nome, a localidade, o score e gastronomia dos restaurantes que alcançaram sempre pontuações inferiores ou igual a 3.
db.restaurants.find( { 'grades.score': { $not: {$gt: 3}} }, {"grades.score": 1, "nome": 1, "localidade": 1, "gastronomia": 1 } )

//14. Liste o nome e as avaliações dos restaurantes que obtiveram uma avaliação com um grade "A", um score 10 na data "2014-08-11T00: 00: 00Z" (ISODATE).
db.restaurants.find({"grades": {"$elemMatch": {grade: "A", score: 10, date: ISODate("2014-08-11T00:00:00Z")}}}, {"nome":1, "grades.grade":1})  

//15.  Liste o restaurant_id, o nome e os score dos restaurantes nos quais a segunda avaliação foi grade "A" e ocorreu em ISODATE "2014-08-11T00: 00: 00Z".
db.restaurants.find( {$and: [{"grades.1.grade": "A"}, {"grades.1.date": ISODate("2014-08-11T00:00:00Z")}]}, {"restaurant_id": 1, "nome":1, "grades.score":1})  

//16. Liste o restaurant_id, o nome, o endereço (address) e as coordenadas geográficas (coord) dos restaurantes onde o 2º elemento da matriz de coordenadas tem um valor superior a 42 e inferior ou igual a 52. 
db.restaurants.find({$and: [{ 'address.coord.1': { $gt: 42 } }, { 'address.coord.1': { $lte: 52 } }]}, {"restaurant_id": 1, "address":1, "address.coord":1, "nome":1,})  

//17. Liste nome, gastronomia e localidade de todos os restaurantes ordenando por ordem crescente da gastronomia e, em segundo, por ordem decrescente de localidade.
db.restaurants.find({}, { "nome": 1, "localidade": 1, "gastronomia": 1 } ).sort({gastronomia:1, localidade:-1})

//18. Liste nome, localidade, grade e gastronomia de todos os restaurantes localizados em Brooklyn que não incluem gastronomia "American" e obtiveram uma classificação  (grade) "A". Deve apresentá-los por ordem decrescente de gastronomia.
db.restaurants.find({$and: [{"localidade": "Brooklyn" }, {"gastronomia": {$ne: "American"}}, {"grades.grade": "A"} ]}, { "nome": 1, "localidade": 1, "gastronomia": 1, "grades.grade": 1 } ).sort({gastronomia: -1})

//19. Conte o total de restaurante existentes em cada localidade.
db.restaurants.aggregate([{$group:{_id:"$localidade", num:{$sum:1}}}])

//20. Liste todos os restaurantes cuja média dos score é superior a 30.
db.restaurants.aggregate([{$addFields: {avg: {$avg: "$grades.score"} }},{$match: {avg: {$gt: 30}}}])

//21. Indique os restaurantes que têm gastronomia "Portuguese", o somatório de score é superior a 50 e estão numa latitude inferior a -60. 
db.restaurants.aggregate([{$addFields : { sum :  {$sum : '$grades.score'}}}, {$match : {sum: {$gt: 50}, gastronomia: 'Portuguese', 'address.coord.0': {$lt: -60}}}])

//22. Apresente o nome e o score dos 3 restaurantes com score médio mais elevado.
db.restaurants.aggregate([{$addFields: {avg: {$avg: "$grades.score"} }},{$project: {nome:"$nome", avg:"$avg"}}, {$sort:{avg:-1}}, {$limit:3}])

//23. Apresente o número de gastronomias diferentes na rua "Fifth Avenue"
db.restaurants.aggregate([{$match: {"address.rua":"Fifth Avenue"}}, {$group:{_id:"$gastronomia"}}, {$count: "gastronomias"}])

//24. Conte quantos restaurantes existem por rua e ordene por ordem decrescente 
db.restaurants.aggregate([{$group:{_id:"$address.rua", num_restaurantes:{$sum:1}}}, {$sort:{num_restaurantes:-1}}])

//25. Apresente o número de restaurantes que possuem 'Restaurant' no nome
db.restaurants.aggregate([{$match: {nome: {$regex: 'Restaurant*'}}},{$count: 'num_restaurants'}])

//26. Apresente a gastonomia mais utilizada pelos restaurantes
db.restaurants.aggregate([{$group:{ _id:"$gastronomia", sum:{$sum:1}}},{$sort:{sum:-1}},{$limit:1}])

//27. Liste o nome e gastronomia dos restaurantes cujo a localizaçao é em Brooklyn e nao têm a gastronomia "Delicatessen"
db.restaurants.find({localidade: 'Brooklyn', gastronomia: {$ne: 'Delicatessen'}},{_id: 0, nome: 1, gastronomia: 1})

//28.  Liste o nome, a localidade e a gastronomia dos restaurantes que têm localizaçao em Brooklyn e gastronomia "Delicatessen" ordenados por ordem descrescente do nome
db.restaurants.find({$and:[{gastronomia:"Delicatessen"},{localidade:"Brooklyn"},]},{nome:1,localidade:1,gastronomia:1}).sort({nome:-1})

//29. Apresente a localizaçao mais utilizada pelos restaurantes
db.restaurants.aggregate([{$group: {_id:"$localidade", sum: {$sum:1}}},{$sort: {sum:-1}},{$limit: 1}])

//30. Indique os restaurantes que não tem gastronomia "Delicatessen" e que somatório do score inferior seja 55
db.restaurants.aggregate([{$addFields : { sum:  {$sum : '$grades.score'}}}, {$match : {sum: {$lt: 55}, gastronomia: {$ne: 'Delicatessen'}}}])